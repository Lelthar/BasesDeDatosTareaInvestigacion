/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.Mongo;
import java.awt.Image;
import java.net.UnknownHostException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Jeanca
 */
public class RegistroUsuario extends javax.swing.JFrame {

    private DB baseDatos;
    private DBCollection tabla;
    private String pathImagen;
    
    /**
     * Creates new form RegistroUsuario
     */
    @SuppressWarnings({"OverridableMethodCallInConstructor", "static-access"})
    public RegistroUsuario() {
        initComponents();
        this.pathImagen = "";
        this.setLocation(200, 0);
        this.setTitle("Registro de Aficionado");
        this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        this.getContentPane().setBackground(new java.awt.Color(72, 26, 20));
        mongoConexionAficionado("MongoBaseDatos", "aficionado");
    }
    
    /**
     * Conecta a NetBeans con Mongo.
     * La conexión se hace sobre la base de datos nombreBD y sobre la tabla nombreTabla.
     * @param nombreBD
     * @param nombreTabla 
     */
    private void mongoConexionAficionado(String nombreBD, String nombreTabla) {
        Mongo mongo;
        try {
            mongo = new Mongo("localhost", 27017);  
            this.baseDatos = mongo.getDB(nombreBD);
            this.tabla = baseDatos.getCollection(nombreTabla);
        } catch (UnknownHostException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: " + ex.toString());
        }
    }
    
    /**
     * Método que comprueba si un código de usuario ya existe en la base de datos.
     */
    private boolean existeCodigo(String codigoAficionado) {
        BasicDBObject documento = new BasicDBObject();
        DBCursor cursor;
        documento.put("codigo_aficionado", codigoAficionado);
        cursor = this.tabla.find(documento);
        return cursor.count() != 0;
    }
    
    /**
     * Método que comprueba si existe un correo en la base de datos.
     */
    private boolean existeCorreo(String correoElectronico) {
        BasicDBObject documento = new BasicDBObject();
        DBCursor cursor;
        documento.put("correo_electronico", correoElectronico);
        cursor = this.tabla.find(documento);
        return cursor.count() != 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codigo_jLabel = new javax.swing.JLabel();
        password_jLabel = new javax.swing.JLabel();
        confirmar_jLabel = new javax.swing.JLabel();
        foto_jLabel = new javax.swing.JLabel();
        ver_foto_jLabel = new javax.swing.JLabel();
        email_jLabel = new javax.swing.JLabel();
        ver_email_jLabel = new javax.swing.JLabel();
        titulo_jLabel = new javax.swing.JLabel();
        codigo_jTextField = new javax.swing.JTextField();
        info1_jLabel = new javax.swing.JLabel();
        info2_jLabel = new javax.swing.JLabel();
        info3_jLabel = new javax.swing.JLabel();
        ver_foto_jComboBox = new javax.swing.JComboBox<>();
        email_jTextField = new javax.swing.JTextField();
        password_jPasswordField = new javax.swing.JPasswordField();
        confirmar_jPasswordField = new javax.swing.JPasswordField();
        ver_email_jComboBox = new javax.swing.JComboBox<>();
        registrar_jButton = new javax.swing.JButton();
        volver_jButton = new javax.swing.JButton();
        foto_jPanel = new javax.swing.JPanel();
        mostrar_foto_jLabel = new javax.swing.JLabel();
        info4_jLabel = new javax.swing.JLabel();
        seleccionar_foto_jButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        codigo_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        codigo_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        codigo_jLabel.setText("Código de Usuario:");

        password_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        password_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        password_jLabel.setText("Contraseña:");

        confirmar_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        confirmar_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        confirmar_jLabel.setText("Confirmar Contraseña:");

        foto_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        foto_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        foto_jLabel.setText("Foto de Perfil:");

        ver_foto_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        ver_foto_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        ver_foto_jLabel.setText("Desea que su foto sea visible a los demás?");

        email_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        email_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        email_jLabel.setText("Correo Electrónico:");

        ver_email_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        ver_email_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        ver_email_jLabel.setText("Desea que su correo sea visible a los demás?");

        titulo_jLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        titulo_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        titulo_jLabel.setText("Aficionado, llene la siguiente información:");

        info1_jLabel.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        info1_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        info1_jLabel.setText("Mínimo 5 caracteres, máximo 15 caracteres.");

        info2_jLabel.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        info2_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        info2_jLabel.setText("Debe contener más de 8 caracteres.");

        info3_jLabel.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        info3_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        info3_jLabel.setText("Debe coincidor con la primera contraseña.");

        ver_foto_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NO", "SI" }));

        ver_email_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NO", "SI" }));

        registrar_jButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        registrar_jButton.setText("Registrar");
        registrar_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrar_jButtonActionPerformed(evt);
            }
        });

        volver_jButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        volver_jButton.setText("Volver");
        volver_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volver_jButtonActionPerformed(evt);
            }
        });

        foto_jPanel.setMaximumSize(new java.awt.Dimension(100, 100));
        foto_jPanel.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout foto_jPanelLayout = new javax.swing.GroupLayout(foto_jPanel);
        foto_jPanel.setLayout(foto_jPanelLayout);
        foto_jPanelLayout.setHorizontalGroup(
            foto_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foto_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mostrar_foto_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addContainerGap())
        );
        foto_jPanelLayout.setVerticalGroup(
            foto_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foto_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mostrar_foto_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );

        info4_jLabel.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        info4_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        info4_jLabel.setText("Vista previa foto:");

        seleccionar_foto_jButton.setText("Seleccionar");
        seleccionar_foto_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionar_foto_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(titulo_jLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(email_jLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ver_email_jLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ver_email_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(email_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ver_foto_jLabel)
                                    .addGap(30, 30, 30)
                                    .addComponent(ver_foto_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(foto_jLabel)
                                .addGap(77, 77, 77)
                                .addComponent(seleccionar_foto_jButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(volver_jButton)
                                .addGap(18, 18, 18)
                                .addComponent(registrar_jButton)))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(info4_jLabel)
                            .addComponent(foto_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 50, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(confirmar_jLabel)
                                .addGap(18, 18, 18)
                                .addComponent(confirmar_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(info3_jLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codigo_jLabel)
                                    .addComponent(password_jLabel))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(password_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codigo_jTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(info1_jLabel)
                                    .addComponent(info2_jLabel))))
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(titulo_jLabel)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigo_jLabel)
                    .addComponent(codigo_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(info1_jLabel))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password_jLabel)
                    .addComponent(info2_jLabel)
                    .addComponent(password_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmar_jLabel)
                    .addComponent(info3_jLabel)
                    .addComponent(confirmar_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(info4_jLabel)
                        .addGap(18, 18, 18)
                        .addComponent(foto_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(foto_jLabel)
                            .addComponent(seleccionar_foto_jButton))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ver_foto_jLabel)
                            .addComponent(ver_foto_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email_jLabel)
                            .addComponent(email_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ver_email_jLabel)
                            .addComponent(ver_email_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(registrar_jButton)
                            .addComponent(volver_jButton))))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botón que cierra la ventana actual.
     * @param evt 
     */
    private void volver_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volver_jButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_volver_jButtonActionPerformed

    /**
     * Botón que despliega un JFileChooser para seleccionar la ruta de la imagen.
     * @param evt 
     */
    private void seleccionar_foto_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionar_foto_jButtonActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        int opcion = jFileChooser.showOpenDialog(this);
        if (opcion == JFileChooser.APPROVE_OPTION) {
            String nombreImagen = jFileChooser.getSelectedFile().getName();
            if (nombreImagen.endsWith(".jpg") || nombreImagen.endsWith(".png")) {
                this.pathImagen = jFileChooser.getSelectedFile().toString();
                ImageIcon foto = new ImageIcon(this.pathImagen);
                Icon iconFoto = new ImageIcon(foto.getImage().getScaledInstance(this.mostrar_foto_jLabel.getWidth(), 
                        this.mostrar_foto_jLabel.getWidth(), Image.SCALE_SMOOTH));
                this.mostrar_foto_jLabel.setIcon(iconFoto);
            } else {
                JOptionPane.showMessageDialog(null, "ERROR: el archivo debe de ser una imagen.", "", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_seleccionar_foto_jButtonActionPerformed

    /**
     * Botón que se encarga del registro de un aficionado.
     * Internamente realiza las validaciones correspondientes, si las cumple registra al usuario en la base de datos.
     * @param evt 
     */
    private void registrar_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrar_jButtonActionPerformed
        String codigoAficionado = this.codigo_jTextField.getText();
        String password = this.password_jPasswordField.getText();
        String comfirmarPassword = this.confirmar_jPasswordField.getText();
        String correoElectronico = this.email_jTextField.getText();
        if (codigoAficionado.equals("")) {
            JOptionPane.showMessageDialog(null, "ERROR: el código de usuario está vacío.", "", JOptionPane.ERROR_MESSAGE);
        } else if (codigoAficionado.length() < 4 || codigoAficionado.length() > 15) {
            JOptionPane.showMessageDialog(null, "ERROR: la longitud del código de usuario es incorrecta.\n" +
                    "Verifique que cuente con más de 4 caracteres y menos de 16 caracteres.", "", JOptionPane.ERROR_MESSAGE);
        } else if (password.equals("") || comfirmarPassword.equals("")){
            JOptionPane.showMessageDialog(null, "ERROR: debe de llenar los dos campos de contraseña.", "", JOptionPane.ERROR_MESSAGE);
        } else if (!password.equals(comfirmarPassword)) {
            JOptionPane.showMessageDialog(null, "ERROR: las dos contraseñas deben coincidir.", "", JOptionPane.ERROR_MESSAGE);
        } else if (password.length() < 8) {
            JOptionPane.showMessageDialog(null, "ERROR: la contraseña debe tener al menos 8 caracteres.", "", JOptionPane.ERROR_MESSAGE);
        } else if (this.pathImagen.equals("")) {
            JOptionPane.showMessageDialog(null, "ERROR: debe seleccionar una imagen de usuario.", "", JOptionPane.ERROR_MESSAGE);
        } else if (correoElectronico.equals("")) {
            JOptionPane.showMessageDialog(null, "ERROR: debe de colocar un correo electrónico.", "", JOptionPane.ERROR_MESSAGE);       
        } else if (!correoElectronico.matches("[a-zA-Z0-9_]+(@gmail|@hotmail|@yahoo)(.com)")) {
            JOptionPane.showMessageDialog(null, "ERROR: formato de correo electrónico incorrecto.", "", JOptionPane.ERROR_MESSAGE);
        } else {
            if (existeCodigo(codigoAficionado)) {
                JOptionPane.showMessageDialog(null, "ERROR: el código de usuario ya existe.", "", JOptionPane.ERROR_MESSAGE);
            } else if (existeCorreo(correoElectronico)) {
                JOptionPane.showMessageDialog(null, "ERROR: el correo electrónico ya existe.", "", JOptionPane.ERROR_MESSAGE);
            } else {
                BasicDBObject documento = new BasicDBObject();
                documento.put("codigo_aficionado", codigoAficionado);
                documento.put("password", password);
                documento.put("foto_aficionado", this.pathImagen);
                documento.put("despliegue_foto", (String) this.ver_foto_jComboBox.getSelectedItem());
                documento.put("correo_electronico", correoElectronico);
                documento.put("despliegue_correo", (String) this.ver_email_jComboBox.getSelectedItem());
                documento.put("estado", "activo");
                this.tabla.insert(documento);
                JOptionPane.showMessageDialog(null, "Se ha registrado exitosamente.");
                this.registrar_jButton.enable(false);
            }
        }
    }//GEN-LAST:event_registrar_jButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RegistroUsuario().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel codigo_jLabel;
    private javax.swing.JTextField codigo_jTextField;
    private javax.swing.JLabel confirmar_jLabel;
    private javax.swing.JPasswordField confirmar_jPasswordField;
    private javax.swing.JLabel email_jLabel;
    private javax.swing.JTextField email_jTextField;
    private javax.swing.JLabel foto_jLabel;
    private javax.swing.JPanel foto_jPanel;
    private javax.swing.JLabel info1_jLabel;
    private javax.swing.JLabel info2_jLabel;
    private javax.swing.JLabel info3_jLabel;
    private javax.swing.JLabel info4_jLabel;
    private javax.swing.JLabel mostrar_foto_jLabel;
    private javax.swing.JLabel password_jLabel;
    private javax.swing.JPasswordField password_jPasswordField;
    private javax.swing.JButton registrar_jButton;
    private javax.swing.JButton seleccionar_foto_jButton;
    private javax.swing.JLabel titulo_jLabel;
    private javax.swing.JComboBox<String> ver_email_jComboBox;
    private javax.swing.JLabel ver_email_jLabel;
    private javax.swing.JComboBox<String> ver_foto_jComboBox;
    private javax.swing.JLabel ver_foto_jLabel;
    private javax.swing.JButton volver_jButton;
    // End of variables declaration//GEN-END:variables
}
