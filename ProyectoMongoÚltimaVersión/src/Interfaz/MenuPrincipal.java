/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import ValoresGlobales.VariablesSistema;
import ValoresGlobales.LabelListener;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.Mongo;
import java.awt.HeadlessException;

import java.net.UnknownHostException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author Jeanca
 */
public class MenuPrincipal extends javax.swing.JFrame {

    private DB baseDatos;
    private DBCollection tabla;
    private final ImageIcon iconoFlecha = new ImageIcon(getClass().getResource("/Complementos/flecha.png"));
    
    /**
     * Creates new form Inicio
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public MenuPrincipal() {
        initComponents();
        this.jLabel1.setText(""); this.jLabel1.setIcon(iconoFlecha); 
        this.jLabel2.setText(""); this.jLabel2.setIcon(iconoFlecha); 
        this.cerrar_sesion_jMenuItem.setVisible(false);
        this.eliminar_cuenta_jMenuItem.setVisible(false);
        LabelListener.createListener(this.crud_partidos_jLabel, 1);
        LabelListener.createListener(this.crud_comentarios_jLabel, 2);
        VariablesSistema.setNombreUsuario("");
        VariablesSistema.setPasswordUsuario("");
        this.setLocation(300, 100);
        this.setTitle("Menú Principal");
        this.getContentPane().setBackground(new java.awt.Color(25, 30, 39));
        mongoConexionAficionado("MongoBaseDatos", "aficionado");
    }
    
    /**
     * Conecta a NetBeans con Mongo.
     */
    private void mongoConexionAficionado(String nombreBD, String nombreTabla) {
        Mongo mongo;
        try {
            mongo = new Mongo("localhost", 27017);  
            this.baseDatos = mongo.getDB(nombreBD);
            this.tabla = baseDatos.getCollection(nombreTabla);
        } catch (UnknownHostException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: " + ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        crud_partidos_jLabel = new javax.swing.JLabel();
        crud_comentarios_jLabel = new javax.swing.JLabel();
        titulo_jLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        opciones_jMenuBar = new javax.swing.JMenuBar();
        opciones_jMenu = new javax.swing.JMenu();
        registrarse_jMenuItem = new javax.swing.JMenuItem();
        inicio_sesion_jMenuItem = new javax.swing.JMenuItem();
        cerrar_sesion_jMenuItem = new javax.swing.JMenuItem();
        eliminar_cuenta_jMenuItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        crud_partidos_jLabel.setBackground(new java.awt.Color(255, 255, 255));
        crud_partidos_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        crud_partidos_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        crud_partidos_jLabel.setText("Editar Resumen de Partido");

        crud_comentarios_jLabel.setBackground(new java.awt.Color(255, 255, 255));
        crud_comentarios_jLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        crud_comentarios_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        crud_comentarios_jLabel.setText("Editar Comentario");

        titulo_jLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        titulo_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        titulo_jLabel.setText("Funcionalidades");

        jLabel1.setText("1");

        jLabel2.setText("2");

        opciones_jMenu.setText("Opciones");

        registrarse_jMenuItem.setText("Registrarse");
        registrarse_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarse_jMenuItemActionPerformed(evt);
            }
        });
        opciones_jMenu.add(registrarse_jMenuItem);

        inicio_sesion_jMenuItem.setText("Iniciar Sesión");
        inicio_sesion_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicio_sesion_jMenuItemActionPerformed(evt);
            }
        });
        opciones_jMenu.add(inicio_sesion_jMenuItem);

        cerrar_sesion_jMenuItem.setText("Cerrar Sesión");
        cerrar_sesion_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrar_sesion_jMenuItemActionPerformed(evt);
            }
        });
        opciones_jMenu.add(cerrar_sesion_jMenuItem);

        eliminar_cuenta_jMenuItem.setText("Eliminar Cuenta");
        eliminar_cuenta_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_cuenta_jMenuItemActionPerformed(evt);
            }
        });
        opciones_jMenu.add(eliminar_cuenta_jMenuItem);

        opciones_jMenuBar.add(opciones_jMenu);

        setJMenuBar(opciones_jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(crud_partidos_jLabel)
                            .addComponent(crud_comentarios_jLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(titulo_jLabel)))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(titulo_jLabel)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crud_partidos_jLabel)
                    .addComponent(jLabel1))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crud_comentarios_jLabel)
                    .addComponent(jLabel2))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Funcionalidad para el inicio de sesión en la aplicación.
     * @param evt 
     */
    private void inicio_sesion_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicio_sesion_jMenuItemActionPerformed
        try {
            JTextField nombre_usuario_jTextField = new JTextField(); 
            JPasswordField password_JPasswordField = new JPasswordField();
            Object[] mensaje = { "Nombre de Usuario: ", nombre_usuario_jTextField,
                                 "Contraseña: ", password_JPasswordField };
            int opcion = JOptionPane.showConfirmDialog(null, mensaje, "Inicio de Sesión ", JOptionPane.OK_CANCEL_OPTION);
            if (opcion == JOptionPane.OK_OPTION) {
                String nombreUsuario = nombre_usuario_jTextField.getText();
                String password = password_JPasswordField.getText();
                if (nombreUsuario.equals("") || password.equals("")) {
                    JOptionPane.showMessageDialog(null, "ERROR: entradas vacías.", "", JOptionPane.ERROR_MESSAGE);
                } else {
                    BasicDBObject documento = new BasicDBObject();
                    documento.put("codigo_aficionado", nombreUsuario);
                    String estadoUsuario = this.tabla.find(documento).next().get("estado").toString();
                    String passwordUsuario = this.tabla.find(documento).next().get("password").toString();
                    if (estadoUsuario.equals("inactivo")) {
                        JOptionPane.showMessageDialog(null, "ERROR: este usuario está inactivo.", "", JOptionPane.ERROR_MESSAGE);
                    } else if (!passwordUsuario.equals(password)) {
                        JOptionPane.showMessageDialog(null, "ERROR: no se ha podido iniciar sesión.", "", JOptionPane.ERROR_MESSAGE);
                    } else {
                        VariablesSistema.setNombreUsuario(nombreUsuario);
                        VariablesSistema.setPasswordUsuario(password);
                        this.registrarse_jMenuItem.setVisible(false);
                        this.inicio_sesion_jMenuItem.setVisible(false);
                        this.cerrar_sesion_jMenuItem.setVisible(true);
                        this.eliminar_cuenta_jMenuItem.setVisible(true);
                        JOptionPane.showMessageDialog(null, "Bienvenido " + nombreUsuario + ".");
                    }
                }
            }
        } catch (HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: no se ha podido iniciar sesión.", "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_inicio_sesion_jMenuItemActionPerformed

    /**
     * Funcionalidad para cerrar sesión.
     * @param evt 
     */
    private void cerrar_sesion_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrar_sesion_jMenuItemActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null, "Está seguro que desea salir?", "", JOptionPane.OK_CANCEL_OPTION);
        if (opcion == JOptionPane.OK_OPTION) {
            VariablesSistema.setNombreUsuario("");
            VariablesSistema.setPasswordUsuario("");
            this.registrarse_jMenuItem.setVisible(true);
            this.inicio_sesion_jMenuItem.setVisible(true);
            this.cerrar_sesion_jMenuItem.setVisible(false);
            this.eliminar_cuenta_jMenuItem.setVisible(false);
            JOptionPane.showMessageDialog(null, "Ha cerrado su sesión.");
        }
    }//GEN-LAST:event_cerrar_sesion_jMenuItemActionPerformed

    /**
     * Muestra la ventana de registro.
     * @param evt 
     */
    private void registrarse_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarse_jMenuItemActionPerformed
        RegistroUsuario registroUsuario = new RegistroUsuario();
        registroUsuario.setVisible(true);
    }//GEN-LAST:event_registrarse_jMenuItemActionPerformed

    /**
     * Elimina la cuenta de aficionado.
     * @param evt 
     */
    private void eliminar_cuenta_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_cuenta_jMenuItemActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null, "Está seguro que desea eiminar su cuenta?\n" 
                + "Si la elimina no prodrá volver a utilizarla.", "", JOptionPane.OK_CANCEL_OPTION);
        if (opcion == JOptionPane.OK_OPTION) {
            
            // Actualización de la tabla aficionado.
            BasicDBObject documento = new BasicDBObject();
            documento.put("codigo_aficionado", VariablesSistema.getNombreUsuario());
            BasicDBObject documentoUpdate = new BasicDBObject();
            documentoUpdate.put("$set", new BasicDBObject().append("estado", "inactivo"));
            this.tabla.update(documento, documentoUpdate);
            
            // Actualización de la tabla aficionado_borrado.
            Date date = new Date();
            documento = new BasicDBObject();
            DBCollection tablaBorrado = baseDatos.getCollection("aficionado_borrado");
            documento.put("codigo_aficionado", VariablesSistema.getNombreUsuario());
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            documento.put("fecha", dateFormat.format(date));
            DateFormat hourFormat = new SimpleDateFormat("HH:mm:ss");
            documento.put("hora", hourFormat.format(date));
            tablaBorrado.insert(documento);
            
            // Actualización de variables internas.
            VariablesSistema.setNombreUsuario("");
            VariablesSistema.setPasswordUsuario("");
            this.registrarse_jMenuItem.setVisible(true);
            this.inicio_sesion_jMenuItem.setVisible(true);
            this.cerrar_sesion_jMenuItem.setVisible(false);
            this.eliminar_cuenta_jMenuItem.setVisible(false);
            JOptionPane.showMessageDialog(null, "Su cuenta ha sido eliminada.");
        }
    }//GEN-LAST:event_eliminar_cuenta_jMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MenuPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem cerrar_sesion_jMenuItem;
    private javax.swing.JLabel crud_comentarios_jLabel;
    private javax.swing.JLabel crud_partidos_jLabel;
    private javax.swing.JMenuItem eliminar_cuenta_jMenuItem;
    private javax.swing.JMenuItem inicio_sesion_jMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu opciones_jMenu;
    private javax.swing.JMenuBar opciones_jMenuBar;
    private javax.swing.JMenuItem registrarse_jMenuItem;
    private javax.swing.JLabel titulo_jLabel;
    // End of variables declaration//GEN-END:variables
}
