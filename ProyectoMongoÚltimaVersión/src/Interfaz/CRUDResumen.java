/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.Mongo;
import java.awt.Image;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jeanca
 */
public class CRUDResumen extends javax.swing.JFrame {

    private DB baseDatos;
    private DBCollection tabla;
    private boolean activacion = false;
    private ArrayList<String> ListaVideos = new ArrayList();
    /**
     * Creates new form CRUDComentario
     */
    @SuppressWarnings({"OverridableMethodCallInConstructor", "static-access"})
    public CRUDResumen() {
        initComponents();
        this.setLocation(200, 0);
        this.setTitle("Registro de Resumen de partido");
        this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        this.getContentPane().setBackground(new java.awt.Color(25, 30, 39));
        mongoConexionAficionado("MongoBaseDatos", "resumen_partido");
        cargarPartidos("partido");
        cargarResumenes();
    }
    
    /**
     * Conecta a NetBeans con Mongo.
     */
    private void mongoConexionAficionado(String nombreBD, String nombreTabla) {
        Mongo mongo;
        try {
            mongo = new Mongo("localhost", 27017);  
            this.baseDatos = mongo.getDB(nombreBD);
            this.tabla = baseDatos.getCollection(nombreTabla);
        } catch (UnknownHostException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: " + ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ver_jButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanelCrear = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTACtexto = new javax.swing.JTextArea();
        JTFNUM = new javax.swing.JTextField();
        crear_jButton = new javax.swing.JButton();
        modificar_jButton = new javax.swing.JButton();
        borrar_jButton = new javax.swing.JButton();
        jComboBoxVer = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jButtonAgregar = new javax.swing.JButton();
        jButtonQuitar = new javax.swing.JButton();
        jComboBoxVideo = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableVideos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButtonGuardarL = new javax.swing.JButton();
        jTextFieldLink = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Opciones:");

        ver_jButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ver_jButton.setText("Ver");
        ver_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_jButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Resumen_partidos:");

        jPanelCrear.setBackground(new java.awt.Color(25, 30, 39));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Numero de Partido:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Descripci√≥n del partido:");

        JTACtexto.setColumns(20);
        JTACtexto.setRows(5);
        jScrollPane2.setViewportView(JTACtexto);

        crear_jButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        crear_jButton.setText("Crear");
        crear_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_jButtonActionPerformed(evt);
            }
        });

        modificar_jButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modificar_jButton.setText("Modificar");
        modificar_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_jButtonActionPerformed(evt);
            }
        });

        borrar_jButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        borrar_jButton.setText("Borrar ");
        borrar_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrar_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCrearLayout = new javax.swing.GroupLayout(jPanelCrear);
        jPanelCrear.setLayout(jPanelCrearLayout);
        jPanelCrearLayout.setHorizontalGroup(
            jPanelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCrearLayout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(jPanelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCrearLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTFNUM, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCrearLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(crear_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(modificar_jButton)
                .addGap(26, 26, 26)
                .addComponent(borrar_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanelCrearLayout.setVerticalGroup(
            jPanelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCrearLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(JTFNUM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crear_jButton)
                    .addComponent(modificar_jButton)
                    .addComponent(borrar_jButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jComboBoxVer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Videos(minimo 2):");

        jButtonAgregar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonQuitar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonQuitar.setText("Quitar video");
        jButtonQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarActionPerformed(evt);
            }
        });

        jComboBoxVideo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTableVideos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Path"
            }
        ));
        jScrollPane3.setViewportView(jTableVideos);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("desde un archivo.");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Desde un enlace:");

        jButtonGuardarL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonGuardarL.setText("Guardar");
        jButtonGuardarL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(ver_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxVer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(43, 43, 43))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldLink, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jComboBoxVideo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonAgregar))
                                            .addComponent(jLabel7))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addComponent(jButtonQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jButtonGuardarL)
                                                    .addComponent(jLabel6))))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addComponent(jPanelCrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ver_jButton)
                    .addComponent(jComboBoxVer, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(jPanelCrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel5)
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldLink, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jButtonGuardarL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAgregar)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonQuitar)
                            .addComponent(jComboBoxVideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void cargarPartidos(String nombreTabla){
        this.tabla = baseDatos.getCollection(nombreTabla);

        DBCursor cursor = this.tabla.find();
        while(cursor.hasNext()){
           int a =(int) Float.parseFloat(cursor.next().get("numero_partido").toString());
           //System.out.println(a);
           //this.jComboBoxPartido.addItem(String.valueOf(a));
        }
    }
    private void cargarResumenes(){
        this.jComboBoxVer.removeAllItems();
        this.tabla = baseDatos.getCollection("resumen_partido");
        DBCursor cursor = this.tabla.find();
        while(cursor.hasNext()){
           int a =(int) Float.parseFloat(cursor.next().get("numero_resumen").toString());
           //System.out.println(a);
           this.jComboBoxVer.addItem(String.valueOf(a));
        }
    }
    
    private boolean validarPartido(String numero){
        this.tabla = baseDatos.getCollection("partido");
        BasicDBObject documento = new BasicDBObject();
        int valor = Integer.parseInt(numero);
        documento.put("numero_partido", valor);
        DBCursor cursor = this.tabla.find(documento);
        this.tabla = baseDatos.getCollection("resumen_partido");
        return cursor.count() != 0;
    }
    
    private boolean validarResumen(String numero){
        this.tabla = baseDatos.getCollection("partido");
        BasicDBObject documento = new BasicDBObject();
        int valor = Integer.parseInt(numero);
        documento.put("numero_resumen", valor);
        DBCursor cursor = this.tabla.find(documento);
        this.tabla = baseDatos.getCollection("resumen_partido");
        return cursor.count() != 0;
    }
    
    private int determinarResumen(){
        DBCursor cursor = this.tabla.find();
        int result=0;
        while(cursor.hasNext()){
           int a =(int) Float.parseFloat(cursor.next().get("numero_resumen").toString());
           if(a>result){
               result=a;
           }
        }
        result+=1;
        return result;
    }
    
    private void cargarVideos(BasicDBObject documento){
        this.tabla = baseDatos.getCollection("videos");
        DBCursor cursor = this.tabla.find(documento);
        int cont=1;
        DefaultTableModel tableModel = (DefaultTableModel) jTableVideos.getModel();
        tableModel.setRowCount(0);
        while(cursor.hasNext()){
            Vector vector = new Vector();
            String video = cursor.next().get("video").toString();
            ListaVideos.add(video);
            vector.add(video);
            this.jComboBoxVideo.addItem(String.valueOf(cont));
            cont+=1;
            tableModel.addRow(vector);
        }
        
        this.tabla = baseDatos.getCollection("resumen_partido");
        
    }
    
    private void limpiarTablaVideos(){
        DefaultTableModel tableModel = (DefaultTableModel) jTableVideos.getModel();
        tableModel.setRowCount(0);
        this.jTableVideos.setModel(tableModel);
        this.jComboBoxVideo.removeAllItems();
    }
    
    private void cargarVideosLV(){
        int size = ListaVideos.size();
        limpiarTablaVideos();
        DefaultTableModel tableModel = (DefaultTableModel) jTableVideos.getModel();
        tableModel.setRowCount(0);
        int cont=1;
        for(int i=0;i<size;i++){
            Vector vector = new Vector();
            vector.add(ListaVideos.get(i));
            this.jComboBoxVideo.addItem(String.valueOf(cont));
            cont+=1;
            tableModel.addRow(vector);
        }
        this.jTableVideos.setModel(tableModel);
    }
    
    private void insertarVideos(int valor){
        this.tabla = baseDatos.getCollection("videos");
        for(int i=0;i<this.ListaVideos.size();i++){
            BasicDBObject documento = new BasicDBObject();
            documento.put("numero_resumen", valor); // FLOAT
            documento.put("video",this.ListaVideos.get(i));
            this.tabla.insert(documento);
        }
        this.tabla = baseDatos.getCollection("resumen_partido");
    }
    
    private void eliminarVideos(int valor){
        this.tabla = baseDatos.getCollection("videos");
        BasicDBObject documento = new BasicDBObject();
        documento.put("numero_resumen", valor); // FLOAT
        this.tabla.remove(documento);
        this.tabla = baseDatos.getCollection("resumen_partido");

    }
    /**
     * Obtiene los comentarios de la Base de Datos.
     * @param evt 
     */
    private void ver_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_jButtonActionPerformed
        // TODO add your handling code here:
        this.ListaVideos.clear();
        this.JTFNUM.setText("");
        this.JTACtexto.setText("");
        String val = (String) this.jComboBoxVer.getSelectedItem();
        int valor = Integer.parseInt(val);
        BasicDBObject documento = new BasicDBObject();
        documento.put("numero_resumen",valor);
        String texto = this.tabla.find(documento).next().get("texto_resumen").toString();
        String texto1 = this.tabla.find(documento).next().get("numero_partido").toString();
        cargarVideos(documento);
        this.JTFNUM.setText(texto1);
        this.JTACtexto.setText(texto);
        activacion=true;
        JOptionPane.showMessageDialog(null, "Puede realizar las acciones MODIFICAR o BORRAR.Si"
                + " desea crear un resumen, seleccione el boton limpiar e ingrese los datos.");
        //System.out.println(ListaVideos);
    }//GEN-LAST:event_ver_jButtonActionPerformed

    /**
     * Borra un comentario de la Base de Datos.
     * @param evt 
     */
    private void borrar_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrar_jButtonActionPerformed
        // TODO add your handling code here:
        if(activacion==true){
            int opcion = JOptionPane.showConfirmDialog(null, "Desea eliminar el resumen de partido.", "Crear Comentario ", JOptionPane.OK_CANCEL_OPTION);
            if (opcion == JOptionPane.OK_OPTION){
                activacion=false;
                this.JTACtexto.setText("");
                this.JTFNUM.setText("");
                String val = (String) this.jComboBoxVer.getSelectedItem();
                int valor = Integer.parseInt(val);
                BasicDBObject documento = new BasicDBObject();
                documento.put("numero_resumen", valor); // FLOAT
                DBCursor cursor = this.tabla.find(documento);
                if (cursor.count() == 0) {
                    JOptionPane.showMessageDialog(null, "ERROR: el resumen que desea eliminar no existe.", "", JOptionPane.ERROR_MESSAGE);
                } else {
                    this.tabla.remove(documento);
                    this.tabla = baseDatos.getCollection("videos");
                    this.tabla.remove(documento);
                    this.tabla = baseDatos.getCollection("resumen_partido");
                    limpiarTablaVideos();
                    this.ListaVideos.clear();
                    JOptionPane.showMessageDialog(null, "El elemento se ha eliminado correctamente.");
                }
                cargarResumenes();
            }else{
                 JOptionPane.showMessageDialog(null, "No se eliminara el resumen.");
            }
        }
        
    }//GEN-LAST:event_borrar_jButtonActionPerformed

    /**
     * Modifica un comentario de la Base de Datos.
     * @param evt 
     */
    private void modificar_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_jButtonActionPerformed
        // TODO add your handling code here:
        if(activacion==true){
            int opcion = JOptionPane.showConfirmDialog(null, "Desea modificar el resumen de partido.", "Crear Comentario ", JOptionPane.OK_CANCEL_OPTION);
            if (opcion == JOptionPane.OK_OPTION){
                activacion=false;
                 String val = (String) this.jComboBoxVer.getSelectedItem();
                 int valor = Integer.parseInt(val);
                BasicDBObject documento = new BasicDBObject();
                documento.put("numero_resumen", valor); // FLOAT
                DBCursor cursor = this.tabla.find(documento);
                if (cursor.count() == 0) {
                    JOptionPane.showMessageDialog(null, "ERROR: el resumen que desea modificar no existe.", "", JOptionPane.ERROR_MESSAGE);
                } else {
                    String num = this.JTFNUM.getText();
                    String tex = this.JTACtexto.getText();
                    //System.out.println(num+"--"+tex+"--");
                    if(!num.equals("") && !tex.equals("")){
                        if(validarPartido(num)){
                            if(this.ListaVideos.size()>=2){
                                this.tabla.remove(documento);
                                BasicDBObject documento1 = new BasicDBObject();
                                documento1.put("numero_resumen",valor);
                                documento1.put("numero_partido",num);
                                documento1.put("texto_resumen",tex);
                                this.tabla.insert(documento1);
                                eliminarVideos(valor);
                                insertarVideos(valor);
                                JOptionPane.showMessageDialog(null, "El elemento se ha modificado correctamente.");
                                limpiarTablaVideos();
                                cargarResumenes();
                                this.ListaVideos.clear();
                                this.JTACtexto.setText("");
                                this.JTFNUM.setText("");
                            }else{
                                JOptionPane.showMessageDialog(null, "Ingrese almenos 2 videos.");
                            }
                        }else{
                        JOptionPane.showMessageDialog(null, "No existe el partido.");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "Complete los datos.");
                    }
                }                
            }else{
                 JOptionPane.showMessageDialog(null, "No se modificara el resumen.");
            }
        }
    }//GEN-LAST:event_modificar_jButtonActionPerformed

    /**
     * Creaun comentario y lo agrega a la Base de Datos.
     * @param evt 
     */
    private void crear_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_jButtonActionPerformed
        // TODO add your handling code here:
        if(!activacion){
            int opcion = JOptionPane.showConfirmDialog(null, "Desea crear el resumen de partido.", "Crear Comentario ", JOptionPane.OK_CANCEL_OPTION);
            if (opcion == JOptionPane.OK_OPTION){
                int valor = determinarResumen();
                String num = this.JTFNUM.getText();
                String tex = this.JTACtexto.getText();
                //System.out.println(num+"--"+tex+"--");
                if(!num.equals("") && !tex.equals("")){
                    if(validarPartido(num)){
                        if(this.ListaVideos.size()>=2){
                            BasicDBObject documento1 = new BasicDBObject();
                            documento1.put("numero_resumen",valor);
                            documento1.put("numero_partido",num);
                            documento1.put("texto_resumen",tex);
                            this.tabla.insert(documento1);
                            eliminarVideos(valor);
                            insertarVideos(valor);
                            JOptionPane.showMessageDialog(null, "El elemento se ha creado correctamente.");
                            limpiarTablaVideos();
                            cargarResumenes();
                            this.ListaVideos.clear();
                            this.JTACtexto.setText("");
                            this.JTFNUM.setText("");
                        }else{
                            JOptionPane.showMessageDialog(null, "Ingrese almenos 2 videos.");
                        }
                    }else{
                    JOptionPane.showMessageDialog(null, "No existe el partido.");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Complete los datos.");
                }
                                
            }else{
                 JOptionPane.showMessageDialog(null, "No se creara el resumen.");
            }
        }
        

    }//GEN-LAST:event_crear_jButtonActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        int opcion = jFileChooser.showOpenDialog(this);
        if (opcion == JFileChooser.APPROVE_OPTION) {
            String nombreImagen = jFileChooser.getSelectedFile().getName();
            //System.out.println(nombreImagen);
            if (nombreImagen.endsWith(".mp4") || nombreImagen.endsWith(".avi")) {
                String path = jFileChooser.getSelectedFile().toString();
                this.ListaVideos.add(path);
                cargarVideosLV();
                JOptionPane.showMessageDialog(null, "Video agregado.");
                //System.out.println(path);
            } else {
                JOptionPane.showMessageDialog(null, "ERROR: el archivo debe de ser una video o no es .mp4, .avi.", "", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarActionPerformed
        // TODO add your handling code here:
        int opcion = JOptionPane.showConfirmDialog(null, "Desea eliminar el video de partido.", "Crear Comentario ", JOptionPane.OK_CANCEL_OPTION);
        if (opcion == JOptionPane.OK_OPTION){
            String val = (String) this.jComboBoxVideo.getSelectedItem();
            int valor = Integer.parseInt(val);
            valor-=1;
            this.ListaVideos.remove(valor);
            cargarVideosLV();
        }else{
            JOptionPane.showMessageDialog(null, "No se eliminara el video.");
        }
    }//GEN-LAST:event_jButtonQuitarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        limpiarTablaVideos();
        cargarResumenes();
        this.ListaVideos.clear();
        activacion = false;
        this.JTACtexto.setText("");
        this.JTFNUM.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonGuardarLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarLActionPerformed
        // TODO add your handling code here:
        String link = this.jTextFieldLink.getText();
        if(!link.equals("")){
            this.ListaVideos.add(link);
            cargarVideosLV();
            JOptionPane.showMessageDialog(null, "Video agregado.");
            this.jTextFieldLink.setText("");
        }else{
            JOptionPane.showMessageDialog(null, "Espacio del video vacio.");
        }
    }//GEN-LAST:event_jButtonGuardarLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDResumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDResumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDResumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDResumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUDResumen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea JTACtexto;
    private javax.swing.JTextField JTFNUM;
    private javax.swing.JButton borrar_jButton;
    private javax.swing.JButton crear_jButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonGuardarL;
    private javax.swing.JButton jButtonQuitar;
    private javax.swing.JComboBox<String> jComboBoxVer;
    private javax.swing.JComboBox<String> jComboBoxVideo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanelCrear;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableVideos;
    private javax.swing.JTextField jTextFieldLink;
    private javax.swing.JButton modificar_jButton;
    private javax.swing.JButton ver_jButton;
    // End of variables declaration//GEN-END:variables
}
